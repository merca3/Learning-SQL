-- Create new database.

-- In the database create two related tables with CREATE TABLE scripts: 
-- One table should use automatically created primary key.
-- Colons should use different data types.
-- Some columns (not all) should be non mandatory.
-- One column should have default value.

-- Create database structure diagram.

-- Using editor in MSSS input data into tables:
-- What error messages do you have when input incorrect data? 
-- In what situations values of fields could be omitted

-- Create example with three related tables.

-- Create Jobs table
CREATE TABLE jobs (
	job_id int NOT NULL PRIMARY KEY,
	job_desc varchar (50) NOT NULL DEFAULT ('Jauns amats, nosaukums v�l nav izdom�ts'),
	min_level int NOT NULL,
	max_level int NOT NULL 
)
GO

-- Insert record with short syntax
-- job_desc column value will be inserted from DEFAULT definition
INSERT INTO JOBS (job_id, min_level, max_level) VALUES (1,1,8);
-- Insert record with short syntax (all columns)
INSERT INTO JOBS VALUES (2,'Cleaner', 2,3);
-- Insert record with long syntax 
INSERT INTO JOBS (job_id, job_desc, min_level, max_level) VALUES (2,'Cleaner', 2,3);
-- See what happened
SELECT * FROM JOBS;

-- Create employee table
-- Notable, PRIMARY KEY and IDENTITY is defined
-- job_level can be NULL
CREATE TABLE employee (
	emp_id int IDENTITY (1, 1) NOT NULL PRIMARY KEY,
	fname varchar (20) NOT NULL,
	lname varchar (30)  NOT NULL,
	job_id int NOT NULL,
	job_level int NULL,
	hire_date datetime NOT NULL 
)
GO

-- Insert new record into employee, emp_id autogenerated
INSERT INTO employee VALUES ('Oto', 'Kalns', 2, 2, '05.05.2010');
-- Insert new record with full syntax, ommiting job_level, job_level is null for the record
INSERT INTO employee (fname, lname, job_id, hire_date) VALUES ('Oto', 'Kalns', 2, getdate());
-- Insert new record with job_level explicitely defined as null
INSERT INTO employee VALUES ('John', 'Doe', 2, NULL, '05.05.2010');

-- See what happened
SELECT * FROM employee;

-- Remove all records from employy with fname = 'Oto'
DELETE FROM employee WHERE fname = 'Oto';
-- Remove everything
DELETE FROM employee;

-- Insert records with job_level 150
INSERT INTO employee VALUES 
	('John', 'Doe', 2, 150, '05.05.2010'),
	('John', 'Doe', 2, 150, '05.05.2010'),
	('John', 'Doe', 2, 150, '05.05.2010'),
	('John', 'Doe', 2, 150, '05.05.2010'),
	('John', 'Doe', 2, 150, '05.05.2010'),
	('John', 'Doe', 2, 150, '05.05.2010'),
	('John', 'Doe', 2, 150, '05.05.2010');

-- Remove records with job_level greater than 100
DELETE FROM employee
	WHERE job_level > 100

-- Insert records with different job levels
INSERT INTO employee (fname, lname, job_id, job_level, hire_date) 
VALUES 
	('John', 'Doe', 2, 70, '05.05.2010'),
	('John', 'Doe', 2, 70, '05.05.2010'),
	('John', 'Doe', 2, 70, '05.05.2010'),
	('John', 'Doe', 2, 70, '05.05.2010'),
	('John', 'Doe', 2, 70, '05.05.2010'),
	('John', 'Doe 2', 3, 70, '05.05.2010'),
	('John', 'Doe', 2, 93, '05.05.2010'),
	('John', 'Doe', 2, 93, '05.05.2010'),
	('John', 'Doe', 2, 93, '05.05.2010');

-- DELETE records with job_level 70 or 82 or 93
DELETE FROM employee WHERE job_level IN (70, 82, 93);
-- The same as previous (different condition syntax)
DELETE FROM employee WHERE job_level=70 OR job_level=82 OR job_level=93;

-- Delete from eployee with empty job_level
DELETE FROM employee WHERE job_level IS NULL;
-- Delete from emplyee with non-empty job_level
DELETE FROM employee WHERE job_level IS NOT NULL;

-- See what happened
SELECT * FROM employee;
-- Delete specific employee (using PK - primary key)
DELETE FROM employee WHERE emp_id = 51;

-- For the employee with emp_id 32, set job_level to 24
UPDATE employee
	SET job_level=24
	WHERE emp_id=32
	
-- See what happened
SELECT * FROM employee;

-- Insert multiple records with job_level 3
INSERT INTO employee (fname, lname, job_id, job_level, hire_date) 
VALUES 
	('John', 'Doe', 2, 3, '05.05.2010'),
	('John', 'Doe', 2, 3, '05.05.2010'),
	('John', 'Doe', 2, 3, '05.05.2010'),
	('John', 'Doe', 2, 3, '05.05.2010'),
	('John', 'Doe', 2, 3, '05.05.2010'),
	('John', 'Doe 2', 3, 3, '05.05.2010');

-- For recods with job_level 3 - set that to 4
UPDATE employee 
	SET job_level=4
	WHERE job_level=3

-- For all the records - increment job_level by 1
UPDATE employee 
	SET job_level=job_level+1;

-- See the results
SELECT * FROM employee;

-- Check jobs table
SELECT * FROM jobs;

-- Increment min_level value by 5
-- For all the jobs, which are assigned to employees with fname = 'Oto'
UPDATE jobs 
SET min_level=min_level+5
WHERE job_id IN (
	SELECT job_id FROM employee WHERE fname='Oto'
)
-- Remove all the employees
-- then try running the previous update again - it will update 0 rows
DELETE FROM employee;
